@{
    ViewBag.Title = "SignalR Test";
}

<h2>Testing group broadcast</h2>

<p>Open <a href="@Url.Action("TestAppendTable")">this</a> page to on another private browser/tabs subscribe to the server events.</p>
<p>Then, click the button below to show how random data is appended on the table.</p>

<p>
    Click button to test!
</p>
<input type="submit" id="sendmessage" value="Send!!" />

<h2>Testing site-wide broadcast</h2>

<p>Different from the 1st test, clicking on the button below should publish a random text on any of the SignalRTest Controller's page.</p>

<p>
    Click button to test!
</p>
<input type="submit" id="sitewidemessage" value="Send!!" />

<h2>Testing specific object broadcast</h2>

<p>Different from the other tests, the random text will only be pushed to people who are opening the specific object's page.</p>
<p>Try opening <a href="@Url.Action("SpecificObject", new {id = 1})">page 1</a> and <a href="@Url.Action("SpecificObject", new {id = 2})">page 2</a>. Then specify 1 on the textbox below.</p>

<div>
    <label for="specificText">Input the channel Id (number)</label>
    <br />
    <input type="number" id="specificText" />
</div>

<input type="submit" id="specificmessage" value="Send!!" />

<h2>Testing push from server based on other service actions</h2>
<p>Click button below to push a site-wide message to all clients</p>
<form action="@Url.Action("TestBroadcastOnOtherObjects")" method="POST">
    <input type="submit" value="Send!!" />
</form>

@Html.Partial("_SiteWidePartial")

@section scripts{
    @Scripts.Render("~/bundles/signalr")
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
}